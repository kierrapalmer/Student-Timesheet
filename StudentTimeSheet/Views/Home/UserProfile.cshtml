
@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var email = Request.Cookies["email"].Value;
    if(email == null) {
        Response.Redirect("~/Home/Index");
    }
}
@using WebMatrix.Data;

<script>
    function onStart() {
        document.getElementById("start").style.display = "none";
        document.getElementById("stop").style.display = "inline-block";
        document.getElementById('logDesc').style.display = "inline-block";
    }

    function onStop() {
        document.getElementById("stop").style.display = "none";
        document.getElementById("start").style.display = "inline-block";
        document.getElementById('logDesc').style.display = "none";
    }


    function logout() {
        Response.Cookies.Clear();
        Response.Redirect("~/Home/Index");
    }


    @{
        var db = Database.Open("DBConnection");

        //Determines which function to call on post
        var idValue = ViewContext.RouteData.Values["id"];
        if (idValue != null) {
            switch (idValue.ToString()) {
                case "0": {
                        beginStart(email);
                        break;
                    }
                case "1": {
                        beginEnd(email);
                        break;
                    }
                default: break;

            }
        }

         //Gets currently logged in user
        var getPerson = "SELECT * FROM dbo.People WHERE EmailAddress = @0";
        var person = db.Query(getPerson, email);
        if (person.Count() > 1) {
            var error = "There are more than one accounts with emails matching " + email;
            @error
        }


        //Returns all users in database(for testing reasons ONLY)
        var userStats = db.Query("SELECT TOP 10 CONCAT(DATEPART(MONTH,StartLogTime),'/', DATEPART(DAY,StartLogTime)," +
        "'/',DATEPART(YEAR,StartLogTime),' ', LTRIM(RIGHT(CONVERT(VARCHAR(20),StartLogTime,100),7))) AS StartDateTime," +
        " CASE WHEN StopLogTime = '1900-01-01 00:00:00:000' THEN '' ELSE CONCAT(DATEPART(MONTH,StopLogTime),'/', DATEPART(DAY,StopLogTime)"
    + ",'/',DATEPART(YEAR,StopLogTime),' ', LTRIM(RIGHT(CONVERT(VARCHAR(20),StopLogTime,100),7))) END AS EndDateTime," +
    "CASE WHEN (DATEDIFF(HOUR, StartLogTime, StopLogTime)) < 0 THEN '' ELSE CONVERT(TIME,StopLogTime - StartLogTime) END" +
    " AS TotalTime, LogDescription FROM dbo.GroupProjects GP INNER JOIN dbo.GroupMembers GM on GP.GroupMemberID = GM.GroupMemberID" +
    " WHERE GM.EmailAddress = '" + email + "' ORDER BY StartLogTime DESC");



    }

</script>



@functions{
    //Start logging time
    public void beginStart(string email) {
        var db = Database.Open("DBConnection");
        var getGroupMemberID = db.QueryValue("SELECT GroupMemberID FROM dbo.GroupMembers WHERE EmailAddress = '" + email + "'");
        var startTime = "INSERT INTO dbo.GroupProjects VALUES (2,GETDATE(),'','',1,'" + getGroupMemberID + "')";
        var getGroupProjectID = db.Execute(startTime);

        
        //Redirect from /UserProfile/0 to just /UserProfile
        Response.Redirect("~/Home/UserProfile");

    }

    //Stop logging time
    public void beginEnd(string email) {
        var logDesc = Request.Form["logDesc"];

        var db = Database.Open("DBConnection");
        var getGroupProjectID = db.QueryValue("SELECT MAX(GroupProjectID) FROM dbo.GroupProjects GP INNER JOIN dbo.GroupMembers GM ON GP.GroupMemberID = GM.GroupMemberID WHERE GM.EmailAddress = '" + email + "'");
        var updateStopTime = "UPDATE dbo.GroupProjects SET stopLogTime = GETDATE(), logDescription = '" + logDesc + "' WHERE GroupProjectID = '" + getGroupProjectID + "'";
        var updateGroupProject = db.Execute(updateStopTime);

        //Redirect from /UserProfile/1 to just /UserProfile
        Response.Redirect("~/Home/UserProfile");

    }

}



<div class="box userProfile" id="desc">
    <div class="container-fluid">
        <div class="col-md-12">
            <p>
                @foreach (var row in person) {
                    <span class="name">
                        @row.FirstName  @row.LastName
                    </span>
                }

                CS 3750 - PHP Random Number Game
                <a href="">Switch Projects</a>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 header-btns">
            <a class="btn btn-purple" href="#">Create Group</a>
            <a class="btn btn-light-purple" href="#">Leave Group</a>
            <a class="btn btn-primary" href="#">View Group Dashboard</a>
            <a class="btn btn-info" href="#">View Class Dashboard</a>
            @Html.ActionLink("Logout", "Index", "Home", null,
                                                  new { @class = "btn btn-danger" })
        </div>
    </div>
    <hr>

    <div class="row">
        <div class="col-md-12">
            Instructor Notifications:
        </div>
    </div>
    <hr>

    @*Clock in and clock out *@
    <div class="row">
        <div class="col-md-6 startDiv">
            @Html.ActionLink("Start", "UserProfile", "Home", new { id = 0 },
                                              new { @class = "btn btn-green start", id="start" })
        </div>

        <div class="col-md-6 stopDiv">
            @using (Html.BeginForm("UserProfile", "Home", new { id = 1 }, FormMethod.Post)) {
                <input type="text" name="logDesc" id="logDesc" placeholder="What did you do today?" value="@Request.Form["logDesc"]" />
                <input type="submit" class="btn btn-danger stop" value="Stop" onclick="onStop()" />


            }
        </div>

    </div>

    <table class="table clockInTable">
        <thead>
            <tr class="theadColor">
                <th scope="col"> Start Date/Time</th>
                <th scope="col"> End Date/Time</th>
                <th scope="col"> Total Time for Task</th>
                <th scope="col"> Description of Tasks</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var row in userStats) {
                <tr>
                    <td> @row.StartDateTime </td>
                    <td> @row.EndDateTime </td>
                    <td> @row.TotalTime </td>
                    <td> @row.LogDescription </td>
                </tr>
            }

        </tbody>
    </table>

</div>


</div>